type Location @aws_iam @aws_api_key {
  id: ID!
  Location: String
  Time: String
  Date: String
  Available: Boolean
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Bookings @aws_iam @aws_cognito_user_pools @aws_api_key {
  id: ID!
  Name: String
  Email: String
  Location: String
  Time: String
  Paid: String
  Price: String
  Treatment: String
  Telephone: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

type Products @aws_iam @aws_api_key {
  id: ID!
  Category: String
  Name: String
  Price: String
  StripeID: String
  ImageSrc: String
  href: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelLocationConnection @aws_api_key @aws_iam {
  items: [Location]!
  nextToken: String
}

input ModelLocationFilterInput {
  id: ModelIDInput
  Location: ModelStringInput
  Time: ModelStringInput
  Date: ModelStringInput
  Available: ModelBooleanInput
  and: [ModelLocationFilterInput]
  or: [ModelLocationFilterInput]
  not: ModelLocationFilterInput
}

type Query {
  getLocation(id: ID!): Location @aws_api_key @aws_iam
  listLocations(filter: ModelLocationFilterInput, limit: Int, nextToken: String): ModelLocationConnection @aws_api_key @aws_iam
  getBookings(id: ID!): Bookings @aws_iam @aws_cognito_user_pools
  listBookings(filter: ModelBookingsFilterInput, limit: Int, nextToken: String): ModelBookingsConnection @aws_iam @aws_cognito_user_pools
  getProducts(id: ID!): Products @aws_api_key @aws_iam
  listProducts(filter: ModelProductsFilterInput, limit: Int, nextToken: String): ModelProductsConnection @aws_api_key @aws_iam
}

input ModelLocationConditionInput {
  Location: ModelStringInput
  Time: ModelStringInput
  Date: ModelStringInput
  Available: ModelBooleanInput
  and: [ModelLocationConditionInput]
  or: [ModelLocationConditionInput]
  not: ModelLocationConditionInput
}

input CreateLocationInput {
  id: ID
  Location: String
  Time: String
  Date: String
  Available: Boolean
}

input UpdateLocationInput {
  id: ID!
  Location: String
  Time: String
  Date: String
  Available: Boolean
}

input DeleteLocationInput {
  id: ID!
}

type Mutation {
  createLocation(input: CreateLocationInput!, condition: ModelLocationConditionInput): Location @aws_api_key @aws_iam
  updateLocation(input: UpdateLocationInput!, condition: ModelLocationConditionInput): Location @aws_api_key @aws_iam
  deleteLocation(input: DeleteLocationInput!, condition: ModelLocationConditionInput): Location @aws_api_key @aws_iam
  createBookings(input: CreateBookingsInput!, condition: ModelBookingsConditionInput): Bookings @aws_api_key @aws_iam @aws_cognito_user_pools
  updateBookings(input: UpdateBookingsInput!, condition: ModelBookingsConditionInput): Bookings @aws_api_key @aws_iam @aws_cognito_user_pools
  deleteBookings(input: DeleteBookingsInput!, condition: ModelBookingsConditionInput): Bookings @aws_iam @aws_cognito_user_pools
  createProducts(input: CreateProductsInput!, condition: ModelProductsConditionInput): Products @aws_api_key @aws_iam
  updateProducts(input: UpdateProductsInput!, condition: ModelProductsConditionInput): Products @aws_api_key @aws_iam
  deleteProducts(input: DeleteProductsInput!, condition: ModelProductsConditionInput): Products @aws_api_key @aws_iam
}

input ModelSubscriptionLocationFilterInput {
  id: ModelSubscriptionIDInput
  Location: ModelSubscriptionStringInput
  Time: ModelSubscriptionStringInput
  Date: ModelSubscriptionStringInput
  Available: ModelSubscriptionBooleanInput
  and: [ModelSubscriptionLocationFilterInput]
  or: [ModelSubscriptionLocationFilterInput]
}

type Subscription {
  onCreateLocation(filter: ModelSubscriptionLocationFilterInput): Location @aws_subscribe(mutations: ["createLocation"]) @aws_api_key @aws_iam
  onUpdateLocation(filter: ModelSubscriptionLocationFilterInput): Location @aws_subscribe(mutations: ["updateLocation"]) @aws_api_key @aws_iam
  onDeleteLocation(filter: ModelSubscriptionLocationFilterInput): Location @aws_subscribe(mutations: ["deleteLocation"]) @aws_api_key @aws_iam
  onCreateBookings(filter: ModelSubscriptionBookingsFilterInput, owner: String): Bookings @aws_subscribe(mutations: ["createBookings"]) @aws_iam @aws_cognito_user_pools
  onUpdateBookings(filter: ModelSubscriptionBookingsFilterInput, owner: String): Bookings @aws_subscribe(mutations: ["updateBookings"]) @aws_iam @aws_cognito_user_pools
  onDeleteBookings(filter: ModelSubscriptionBookingsFilterInput, owner: String): Bookings @aws_subscribe(mutations: ["deleteBookings"]) @aws_iam @aws_cognito_user_pools
  onCreateProducts(filter: ModelSubscriptionProductsFilterInput): Products @aws_subscribe(mutations: ["createProducts"]) @aws_api_key @aws_iam
  onUpdateProducts(filter: ModelSubscriptionProductsFilterInput): Products @aws_subscribe(mutations: ["updateProducts"]) @aws_api_key @aws_iam
  onDeleteProducts(filter: ModelSubscriptionProductsFilterInput): Products @aws_subscribe(mutations: ["deleteProducts"]) @aws_api_key @aws_iam
}

type ModelBookingsConnection @aws_iam @aws_cognito_user_pools {
  items: [Bookings]!
  nextToken: String
}

input ModelBookingsFilterInput {
  id: ModelIDInput
  Name: ModelStringInput
  Email: ModelStringInput
  Location: ModelStringInput
  Time: ModelStringInput
  Paid: ModelStringInput
  Price: ModelStringInput
  Treatment: ModelStringInput
  Telephone: ModelStringInput
  and: [ModelBookingsFilterInput]
  or: [ModelBookingsFilterInput]
  not: ModelBookingsFilterInput
}

input ModelBookingsConditionInput {
  Name: ModelStringInput
  Email: ModelStringInput
  Location: ModelStringInput
  Time: ModelStringInput
  Paid: ModelStringInput
  Price: ModelStringInput
  Treatment: ModelStringInput
  Telephone: ModelStringInput
  and: [ModelBookingsConditionInput]
  or: [ModelBookingsConditionInput]
  not: ModelBookingsConditionInput
}

input CreateBookingsInput {
  id: ID
  Name: String
  Email: String
  Location: String
  Time: String
  Paid: String
  Price: String
  Treatment: String
  Telephone: String
}

input UpdateBookingsInput {
  id: ID!
  Name: String
  Email: String
  Location: String
  Time: String
  Paid: String
  Price: String
  Treatment: String
  Telephone: String
}

input DeleteBookingsInput {
  id: ID!
}

input ModelSubscriptionBookingsFilterInput {
  id: ModelSubscriptionIDInput
  Name: ModelSubscriptionStringInput
  Email: ModelSubscriptionStringInput
  Location: ModelSubscriptionStringInput
  Time: ModelSubscriptionStringInput
  Paid: ModelSubscriptionStringInput
  Price: ModelSubscriptionStringInput
  Treatment: ModelSubscriptionStringInput
  Telephone: ModelSubscriptionStringInput
  and: [ModelSubscriptionBookingsFilterInput]
  or: [ModelSubscriptionBookingsFilterInput]
}

type ModelProductsConnection @aws_api_key @aws_iam {
  items: [Products]!
  nextToken: String
}

input ModelProductsFilterInput {
  id: ModelIDInput
  Category: ModelStringInput
  Name: ModelStringInput
  Price: ModelStringInput
  StripeID: ModelStringInput
  ImageSrc: ModelStringInput
  href: ModelStringInput
  and: [ModelProductsFilterInput]
  or: [ModelProductsFilterInput]
  not: ModelProductsFilterInput
}

input ModelProductsConditionInput {
  Category: ModelStringInput
  Name: ModelStringInput
  Price: ModelStringInput
  StripeID: ModelStringInput
  ImageSrc: ModelStringInput
  href: ModelStringInput
  and: [ModelProductsConditionInput]
  or: [ModelProductsConditionInput]
  not: ModelProductsConditionInput
}

input CreateProductsInput {
  id: ID
  Category: String
  Name: String
  Price: String
  StripeID: String
  ImageSrc: String
  href: String
}

input UpdateProductsInput {
  id: ID!
  Category: String
  Name: String
  Price: String
  StripeID: String
  ImageSrc: String
  href: String
}

input DeleteProductsInput {
  id: ID!
}

input ModelSubscriptionProductsFilterInput {
  id: ModelSubscriptionIDInput
  Category: ModelSubscriptionStringInput
  Name: ModelSubscriptionStringInput
  Price: ModelSubscriptionStringInput
  StripeID: ModelSubscriptionStringInput
  ImageSrc: ModelSubscriptionStringInput
  href: ModelSubscriptionStringInput
  and: [ModelSubscriptionProductsFilterInput]
  or: [ModelSubscriptionProductsFilterInput]
}
